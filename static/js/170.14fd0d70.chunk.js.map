{"version":3,"file":"static/js/170.14fd0d70.chunk.js","mappings":"kRAEaA,E,OAAQC,GAAAA,IAAH,+D,iBCkElB,EA5DqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MASjB,IAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,qGACWC,EAAAA,EAAAA,IAAUN,GADrB,OACNO,EADM,OAEZR,EAASQ,GAFG,2CAAH,qDAIXF,GACD,GAAE,CAACL,IACU,OAAVF,EAAJ,CAIA,IAAQU,EACNV,EADMU,aAAcC,EACpBX,EADoBW,YAAaC,EACjCZ,EADiCY,MAAOC,EACxCb,EADwCa,eAAgBC,EACxDd,EADwDc,SAEpDC,EADJf,EADkEgB,OAE1CC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAC7BC,EAAQ,GAAKV,EAAaW,QAAQ,GAClCC,EAAY,oBAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,OACE,UAACC,EAAA,EAAD,YACE,UAACA,EAAA,EAAD,CAAKC,QAAQ,OAAb,WACE,SAAC,KAAD,CAAMC,GAAIL,EAAcM,KAAK,SAA7B,sBAGA,SAAC/B,EAAD,CACEgC,IACElB,EAAW,yCAC2BA,GAClCmB,EAENC,IAAKnB,KAEP,UAACa,EAAA,EAAD,YACE,wBAAKZ,KACL,wCAAgBO,EAAhB,QACA,sCACA,uBAAIN,KACJ,oCACA,uBAAIC,EAAWiB,KAAK,eAGxB,UAACP,EAAA,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAxCL,CA4CF,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const Image = styled.img`\n    width: 300px;\n    height: 380px;\n`","import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fetchById } from 'servises/Api';\nimport { Link, Outlet } from 'react-router-dom';\nimport Box from 'components/Box';\nimport { Image } from './MovieDetails.styled';\nimport defaultImage from '../../images/defaultImage.png';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const newMovie = await fetchById(movieId);\n      setMovie(newMovie);\n    };\n    fetch();\n  }, [movieId]);\n  if (movie === null) {\n    return;\n  }\n\n  const { vote_average, poster_path, title, original_title, overview, genres } =\n    movie;\n  const genreNames = genres.map(genre => genre.name);\n  const score = 10 * vote_average.toFixed(1);\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <Box>\n      <Box display=\"flex\">\n        <Link to={backLinkHref} type=\"button\">\n          Go back\n        </Link>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : defaultImage\n          }\n          alt={title}\n        />\n        <Box>\n          <h2>{original_title}</h2>\n          <p>User score: {score}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genreNames.join(', ')}</p>\n        </Box>\n      </Box>\n      <Box>\n        <h2>Additional Information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Image","styled","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","fetch","fetchById","newMovie","vote_average","poster_path","title","original_title","overview","genreNames","genres","map","genre","name","score","toFixed","backLinkHref","state","from","Box","display","to","type","src","defaultImage","alt","join"],"sourceRoot":""}